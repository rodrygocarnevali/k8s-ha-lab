---
- name: Inicializar o cluster com kubeadm
  command: >
    kubeadm init
    --apiserver-cert-extra-sans=192.168.56.10
    --control-plane-endpoint=192.168.56.13:6443
    --apiserver-advertise-address=192.168.56.10
    --pod-network-cidr=192.168.0.0/16
    --upload-certs
    
- name: Criar diretório .kube para o usuário vagrant
  file:
    path: /home/vagrant/.kube
    state: directory
    owner: vagrant
    group: vagrant
    mode: 0755
  become: true  

- name: Copiar admin.conf para /home/vagrant/.kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/vagrant/.kube/config
    remote_src: yes
    owner: vagrant
    group: vagrant
    mode: 0644
  become: true 

- name: Aplicar a instalação do Calico
  become_user: vagrant
  environment:
    KUBECONFIG: /home/vagrant/.kube/config
  command: kubectl apply -f https://raw.githubusercontent.com/projectcalico/calico/v3.27.0/manifests/calico.yaml
  become: false

- name: Gerar comando de join padrão
  command: kubeadm token create --print-join-command
  register: join_cmd_raw
 
- name: Gerar chave de certificado para join de control-plane
  command: kubeadm init phase upload-certs --upload-certs
  register: cert_key_raw

- name: Montar comando de join completo para control-plane
  set_fact:
    control_plane_join_cmd: "{{ join_cmd_raw.stdout }} --control-plane --certificate-key {{ cert_key_raw.stdout_lines[-1] }}"
  
- name: Salvar comando de join do control-plane em arquivo local
  local_action:
    module: copy
    content: "#!/bin/bash\n{{ control_plane_join_cmd }}"
  
    dest: files/control-plane-join.sh
    mode: '0755'

- name: Gerar comando de join para worker
  command: kubeadm token create --print-join-command
  register: worker_join_cmd

- name: Salvar comando de join do worker em arquivo local
  local_action:
    module: copy
    content: "#!/bin/bash\n{{ worker_join_cmd.stdout }}"
    dest: files/worker-join.sh
    mode: '0755'
