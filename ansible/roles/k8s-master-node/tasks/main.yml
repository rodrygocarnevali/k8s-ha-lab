---
# Inicializa o cluster Kubernetes com kubeadm no primeiro nó master

- name: Inicializar o cluster com kubeadm
  command: >
    kubeadm init
    --apiserver-advertise-address={{ ansible_host }}
    --pod-network-cidr={{ pod_network_cidr }}
    --node-name={{ inventory_hostname }}
  register: kubeadm_init_output
  when: inventory_hostname == groups['k8s-master-nodes'][0]

- name: Criar diretório .kube para o usuário ansible
  file:
    path: /home/ansible/.kube
    state: directory
    owner: ansible
    group: ansible
    mode: 0755

- name: Copiar admin.conf para /home/ansible/.kube/config
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /home/ansible/.kube/config
    remote_src: yes
    owner: ansible
    group: ansible
    mode: 0644

# Gera o comando de join para novos control-plane
- name: Gerar comando de join para control-plane
  command: kubeadm token create --print-join-command --control-plane
  register: control_plane_join_cmd
  when: inventory_hostname == groups['k8s-master-nodes'][0]

# Gera o comando de join para workers
- name: Gerar comando de join para worker
  command: kubeadm token create --print-join-command
  register: worker_join_cmd
  when: inventory_hostname == groups['k8s-master-nodes'][0]

# Salva o comando de join do control-plane em ansible/files/control-plane-join.sh
- name: Salvar comando de join do control-plane em arquivo local
  local_action: copy content="{{ control_plane_join_cmd.stdout_lines | join('\n') }}" dest="files/control-plane-join.sh" mode=0755
  when: inventory_hostname == groups['k8s-master-nodes'][0]

# Salva o comando de join do worker em ansible/files/worker-join.sh
- name: Salvar comando de join do worker em arquivo local
  local_action: copy content="{{ worker_join_cmd.stdout_lines | join('\n') }}" dest="files/worker-join.sh" mode=0755
  when: inventory_hostname == groups['k8s-master-nodes'][0]
